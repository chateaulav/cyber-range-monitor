/* Animated Border */
.animated-border-container * {
    margin: 0;
    padding: 0;
}

.animated-border-container html {
    font-family: var(--font-family-sans);
    color: var(--text-clr);
}

.animated-border-container body {
    min-height: 100vh;
    background: #0f150b;
    color: #a2a5b3;
    align-content: center;
}

.animated-border-container h2 {
  font-size: 1rem;
  text-align: center;
  color: var(--text-clr);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%; /* Adjust this value as needed */
  
}

.animated-border-container p {
  font-size: 10;
  color: var(--secondary-text-clr);
}

.animated-border-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); /* Adjusts to fit cards on the row */
    gap: 5em; /* Space between cards */
    justify-items: center;
    align-items: center;
    padding: 2em;
}

.animated-border-container .card {
    margin: 0 auto;
    padding: 2em;
    width: 150px;
    height: 200px;
    background: var(--card-clr);
    text-align: center;
    border-radius: 7px;
    position: relative;
}

@property --angle {
    syntax: "<angle>";
    initial-value: 360deg;
    inherits: false;
}

.animated-border-container .card::after,
.animated-border-container .card::before {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    background-image: conic-gradient(from var(--angle), transparent 50%, var(--secondary-accent-clr), var(--accent-clr));
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    z-index: -1;
    padding: 3px;
    border-radius: 10px;
    animation: 5s spin linear infinite;
}

.animated-border-container .card::before {
    filter: blur(1.5rem);
    opacity: 0.5;
}

@keyframes spin {
    from {
        --angle: 0deg;
    }
    to {
        --angle: 360deg;
    }
}
/* End Animated Border */
